function Model(optionspath::String, row::Integer)
    dataframe = CSV.read(optionspath, DataFrames.DataFrame)
    options = Options(dataframe[row,:])
end

"""
	Options(dfrow)

Create a composite containing fixed hyperparameters
"""
function Options(dfrow::DataFrames.DataFrameRow)
    Options(a_latency_s = dfrow.a_latency_s,
			b_scalefactor = dfrow.b_scalefactor,
			choiceobjective=dfrow.choiceobjective,
			choiceLL_scaling_exponent=dfrow.choiceLL_scaling_exponent,
			datapath = dfrow.datapath,
			Œît = dfrow.dt,
			fit_A·∂ú‚ÇÅ‚ÇÅ= dfrow.fit_Ac11==1,
			fit_A·∂ú‚ÇÇ‚ÇÇ= dfrow.fit_Ac22==1,
			fit_B = dfrow.fit_B==1,
			fit_b = dfrow.fit_b==1,
			fit_ùõÉ = dfrow.fit_beta==1,
			fit_k = dfrow.fit_k==1,
			fit_Œª = dfrow.fit_lambda==1,
			fit_Œº‚ÇÄ = dfrow.fit_mu0==1,
			fit_œï = dfrow.fit_phi==1,
			fit_œÄ·∂ú‚ÇÅ	= dfrow.fit_pic1==1,
			fit_œà = dfrow.fit_psi==1,
			fit_œÉ¬≤‚Çê = dfrow.fit_sigma2_a==1,
			fit_œÉ¬≤·µ¢ = dfrow.fit_sigma2_i==1,
			fit_œÉ¬≤‚Çõ = dfrow.fit_sigma2_s==1,
			fit_w‚Çï = dfrow.fit_w_h==1,
			g_tol = dfrow.g_tol,
			K = dfrow.K,
			L2_b_fit = dfrow.L2_b_fit==1,
			L2_b_max = dfrow.L2_b_max,
			L2_b_min = dfrow.L2_b_min,
			L2_choices_max = dfrow.L2_choices_max,
			L2_choices_min = dfrow.L2_choices_min,
			L2_gain_fit = dfrow.L2_gain_fit==1,
			L2_gain_max = dfrow.L2_gain_max,
			L2_gain_min = dfrow.L2_gain_min,
			L2_hist_fit = dfrow.L2_hist_fit==1,
			L2_hist_max = dfrow.L2_hist_max,
			L2_hist_min = dfrow.L2_hist_min,
			L2_latent_fit = dfrow.L2_latent_fit==1,
			L2_latent_max = dfrow.L2_latent_max,
			L2_latent_min = dfrow.L2_latent_min,
			L2_move_fit = dfrow.L2_move_fit==1,
			L2_move_max = dfrow.L2_move_max,
			L2_move_min = dfrow.L2_move_min,
			L2_phot_fit = dfrow.L2_phot_fit==1,
			L2_phot_max = dfrow.L2_phot_max,
			L2_phot_min = dfrow.L2_phot_min,
			L2_time_fit = dfrow.L2_time_fit==1,
			L2_time_max = dfrow.L2_time_max,
			L2_time_min = dfrow.L2_time_min,
			L2_v_fit = dfrow.L2_v_fit==1,
			L2_v_max = dfrow.L2_v_max,
			L2_v_min = dfrow.L2_v_min,
			lqu_A·∂ú‚ÇÅ‚ÇÅ= [dfrow.Ac11_l, dfrow.Ac11_q, dfrow.Ac11_u],
			lqu_A·∂ú‚ÇÇ‚ÇÇ= [dfrow.Ac22_l, dfrow.Ac22_q, dfrow.Ac22_u],
			lqu_B 	= [dfrow.B_l, dfrow.B_q, dfrow.B_u],
			lqu_k	= [dfrow.k_l, dfrow.k_q, dfrow.k_u],
			lqu_Œª	= [dfrow.lambda_l, dfrow.lambda_q, dfrow.lambda_u],
			lqu_Œº‚ÇÄ	= [dfrow.mu0_l, dfrow.mu0_q, dfrow.mu0_u],
			lqu_œï	= [dfrow.phi_l, dfrow.phi_q, dfrow.phi_u],
			lqu_œÄ·∂ú‚ÇÅ	= [dfrow.pic1_l, dfrow.pic1_q, dfrow.pic1_u],
			lqu_œà	= [dfrow.psi_l, dfrow.psi_q, dfrow.psi_u],
			lqu_œÉ¬≤‚Çê	= [dfrow.sigma2a_l, dfrow.sigma2a_q, dfrow.sigma2a_u],
			lqu_œÉ¬≤·µ¢	= [dfrow.sigma2i_l, dfrow.sigma2i_q, dfrow.sigma2i_u],
			lqu_œÉ¬≤‚Çõ	= [dfrow.sigma2s_l, dfrow.sigma2s_q, dfrow.sigma2s_u],
			lqu_w‚Çï	= [dfrow.w_h_l, dfrow.w_h_q, dfrow.w_h_u],
			minpa = dfrow.minpa,
			neuron_selection_schemes = String.(split(dfrow.neuron_selection_schemes, ", ")),
			objective = dfrow.objective,
			outputpath = dfrow.outputpath,
			recording_ids = String.(split(dfrow.recoding_ids, ", ")),
			sf_y = dfrow.sf_y,
			tbf_accu_begins0 = dfrow.tbf_accu_begins0==1,
			tbf_accu_ends0 = dfrow.tbf_accu_ends0==1,
			tbf_accu_hz = dfrow.tbf_accu_hz,
			tbf_accu_scalefactor = dfrow.tbf_accu_scalefactor,
			tbf_accu_stretch = dfrow.tbf_accu_stretch,
			tbf_gain_scalefactor = dfrow.tbf_gain_scalefactor,
			tbf_hist_begins0 = dfrow.tbf_hist_begins0==1,
			tbf_hist_dur_s = dfrow.tbf_hist_dur_s,
			tbf_hist_ends0 = dfrow.tbf_hist_ends0==1,
			tbf_hist_hz = dfrow.tbf_hist_hz,
			tbf_hist_linear = dfrow.tbf_hist_linear==1,
			tbf_hist_scalefactor = dfrow.tbf_hist_scalefactor,
			tbf_hist_stretch = dfrow.tbf_hist_stretch,
			tbf_move_begins0 = dfrow.tbf_move_begins0==1,
			tbf_move_dur_s = dfrow.tbf_move_dur_s,
			tbf_move_ends0 = dfrow.tbf_move_ends0==1,
			tbf_move_hz = dfrow.tbf_move_hz,
			tbf_move_linear = dfrow.tbf_move_linear==1,
			tbf_move_scalefactor = dfrow.tbf_move_scalefactor,
			tbf_move_stretch = dfrow.tbf_move_stretch,
			tbf_period = dfrow.tbf_period,
			tbf_phot_begins0 = dfrow.tbf_phot_begins0==1,
			tbf_phot_ends0 = dfrow.tbf_phot_ends0==1,
			tbf_phot_hz = dfrow.tbf_phot_hz,
			tbf_phot_linear = dfrow.tbf_phot_linear==1,
			tbf_phot_scalefactor = dfrow.tbf_phot_scalefactor,
			tbf_phot_stretch = dfrow.tbf_phot_stretch,
			tbf_time_begins0 = dfrow.tbf_time_begins0==1,
			tbf_time_dur_s = dfrow.tbf_time_dur_s,
			tbf_time_ends0 = dfrow.tbf_time_ends0==1,
			tbf_time_hz = dfrow.tbf_time_hz,
			tbf_time_linear = dfrow.tbf_time_linear==1,
			tbf_time_scalefactor = dfrow.tbf_time_scalefactor,
			tbf_time_stretch = dfrow.tbf_time_stretch,
			trial_selection_schemes = String.(split(dfrow.trial_selection_schemes, ", ")),
			Œû = dfrow.Xi)
end
